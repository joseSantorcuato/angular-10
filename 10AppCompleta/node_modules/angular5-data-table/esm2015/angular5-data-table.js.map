{
  "version": 3,
  "file": "angular5-data-table.js",
  "sources": [
    "ng://angular5-data-table/out/datatable.module.ts",
    "ng://angular5-data-table/out/components/pagination/pagination.component.ts",
    "ng://angular5-data-table/out/components/header/header.component.ts",
    "ng://angular5-data-table/out/components/table/table.component.ts",
    "ng://angular5-data-table/out/utils/drag.ts",
    "ng://angular5-data-table/out/types/default-translations.type.ts",
    "ng://angular5-data-table/out/components/row/row.component.ts",
    "ng://angular5-data-table/out/directives/column/column.directive.ts",
    "ng://angular5-data-table/out/tools/data-table-resource.ts",
    "ng://angular5-data-table/out/utils/px.ts",
    "ng://angular5-data-table/out/utils/min.ts",
    "ng://angular5-data-table/out/utils/hide.ts"
  ],
  "sourcesContent": [
    "// modules\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n// utils\r\nimport { HideDirective } from './utils/hide';\r\nimport { MinPipe } from './utils/min';\r\nimport { PixelConverter } from './utils/px';\r\n// types & tools\r\nimport { DataTableTranslations } from './types/data-table-translations.type';\r\nimport { CellCallback } from './types/cell-callback.type';\r\nimport { RowCallback } from './types/row-callback.type';\r\nimport { DataTableResource } from './tools/data-table-resource';\r\nimport { DataTableParams } from './types/data-table-params.type';\r\n// components & directives\r\nimport { DataTableComponent } from './components/table/table.component';\r\nimport { DataTableRowComponent } from './components/row/row.component';\r\nimport { DataTableColumnDirective } from './directives/column/column.directive';\r\nimport { DataTableHeaderComponent } from './components/header/header.component';\r\nimport { DataTablePaginationComponent } from './components/pagination/pagination.component';\r\n\r\nexport {\r\n  DataTableComponent, DataTableColumnDirective, DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\r\n  DataTableResource,\r\n  DataTableParams, DataTableTranslations,\r\n  CellCallback, RowCallback\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DataTableComponent, DataTableColumnDirective,\r\n    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\r\n    PixelConverter, HideDirective, MinPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [DataTableComponent, DataTableColumnDirective]\r\n})\r\n\r\nexport class DataTableModule {\r\n  public static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DataTableModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n\r\n\r\n",
    "import {\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { DataTableComponent} from '../table/table.component';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'data-table-pagination',\r\n  template: `<div class=\"d-flex justify-content-between align-items-center\">\r\n  <div class=\"pagination-range\">\r\n    <span [textContent]=\"dataTable.labels.paginationText\r\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\r\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\r\n        .replace('{total}', dataTable.itemCount + '')\"></span>\r\n  </div>\r\n  <div class=\"pagination-controllers pagination-box d-flex justify-content-between\">\r\n    <div class=\"pagination-limit d-flex justify-content-between\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\r\n        </div>\r\n        <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\r\n          <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"pagination-pages d-flex justify-content-between\">\r\n      <button [disabled]=\"dataTable.offset <= 0\"\r\n              (click)=\"pageFirst()\"\r\n              class=\"btn btn-default pagination-firstpage\"\r\n              [title]=\"dataTable.labels.firstPage\"\r\n              [attr.aria-controls]=\"dataTable.id\">\r\n        <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <button [disabled]=\"dataTable.offset <= 0\"\r\n              (click)=\"pageBack()\"\r\n              class=\"btn btn-default pagination-prevpage\"\r\n              [title]=\"dataTable.labels.prevPage\"\r\n              [attr.aria-controls]=\"dataTable.id\">\r\n        <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <div class=\"pagination-page\">\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\r\n              {{ dataTable.labels.pageNumberLabel }}\r\n            </label>\r\n          </div>\r\n          <input #pageInput type=\"number\"\r\n                 [id]=\"id + '-page-input'\"\r\n                 class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\r\n                 [disabled]=\"dataTable.itemCount === 0\"\r\n                 [ngModel]=\"page\"\r\n                 (blur)=\"validate($event)\"\r\n                 (keyup.enter)=\"validate($event)\"\r\n                 (keyup.esc)=\"pageInput.value = page\"\r\n                 [title]=\"dataTable.labels.pageNumber + ' ' +\r\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\r\n                 [attr.aria-controls]=\"dataTable.id\"/>\r\n          <div class=\"input-group-append\">\r\n            <span class=\"input-group-text\">\r\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\r\n              (click)=\"pageForward()\"\r\n              class=\"btn btn-default pagination-nextpage\"\r\n              [title]=\"dataTable.labels.nextPage\"\r\n              [attr.aria-controls]=\"dataTable.id\">\r\n        <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\r\n              (click)=\"pageLast()\"\r\n              class=\"btn btn-default pagination-lastpage\"\r\n              [title]=\"dataTable.labels.lastPage\"\r\n              [attr.aria-controls]=\"dataTable.id\">\r\n        <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.pagination-controllers select{min-width:5rem;text-align:right}.pagination-pages>*{margin:0 .15rem}.pagination-limit{margin-right:1.5rem}.pagination-box button{outline:0!important}`]\r\n})\r\nexport class DataTablePaginationComponent {\r\n\r\n  id = `pagination-${nextId++}`;\r\n\r\n  @ViewChild('pageInput') pageInput: ElementRef;\r\n\r\n  Math: any;\r\n\r\n  @Input() limits: number[];\r\n\r\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\r\n    this.Math = Math;\r\n  }\r\n\r\n  pageBack() {\r\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\r\n    if (this.dataTable.offset <= 0) {\r\n      this.pageInput.nativeElement.focus();\r\n    }\r\n}\r\n  pageForward() {\r\n    this.dataTable.offset += this.dataTable.limit;\r\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\r\n      this.pageInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  pageFirst() {\r\n    this.dataTable.offset = 0;\r\n    this.pageInput.nativeElement.focus();\r\n  }\r\n\r\n  pageLast() {\r\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\r\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\r\n      this.pageInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  get maxPage() {\r\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\r\n  }\r\n\r\n  get limit() {\r\n    return this.dataTable.limit;\r\n  }\r\n\r\n  set limit(value) {\r\n    this.dataTable.limit = +value;\r\n    // returning back to the first page.\r\n    this.page = 1;\r\n  }\r\n\r\n  get page() {\r\n    return this.dataTable.page;\r\n  }\r\n\r\n  set page(value) {\r\n    this.dataTable.page = +value;\r\n  }\r\n\r\n  validate(event) {\r\n    const newValue = +event.target.value;\r\n    if (newValue !== this.page) {\r\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1 ) ? 1 : newValue;\r\n      event.target.value = this.page;\r\n    }\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  Inject\r\n} from '@angular/core';\r\nimport { DataTableComponent } from '../table/table.component';\r\n\r\n@Component({\r\n  selector: 'data-table-header',\r\n  template: `<div class=\"data-table-header\">\r\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\r\n  <div class=\"button-panel\">\r\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\r\n            (click)=\"dataTable.reloadItems()\"\r\n            [title]=\"dataTable.labels.headerReload.replace('{title}', dataTable.title)\">\r\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\r\n            [attr.aria-haspopup]=\"true\"\r\n            [attr.aria-expanded]=\"columnSelectorOpen\"\r\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\"\r\n            [title]=\"dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title)\">\r\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\r\n    </button>\r\n    <div class=\"column-selector-wrapper\">\r\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\r\n            <label class=\"d-flex align-items-center\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\r\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\r\n            </label>\r\n          </li>\r\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\r\n            <label class=\"d-flex align-items-center\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\r\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\r\n            </label>\r\n          </li>\r\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\r\n            <label class=\"d-flex align-items-center\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\r\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\r\n            </label>\r\n          </li>\r\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\r\n            <li class=\"list-group-item column-selector-column checkbox\"\r\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\r\n              <label class=\"d-flex align-items-center\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\r\n                <span [textContent]=\"item.header\"></span>\r\n              </label>\r\n            </li>\r\n          </ng-template>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.data-table-header{min-height:25px;margin-bottom:10px}.title{display:inline-block;margin:5px 0 0 5px}.button-panel{float:right}.button-panel button{outline:0!important}.column-selector-wrapper{position:relative}.column-selector-box{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box .list-group-item.column-selector-column{padding:.5rem .25rem}.column-selector-box .list-group-item.column-selector-column label{margin-bottom:0}.column-selector-box .list-group-item.column-selector-column input{margin-right:4px;font-style:italic}`]\r\n})\r\nexport class DataTableHeaderComponent {\r\n\r\n  columnSelectorOpen = false;\r\n\r\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\r\n              private elemRef: ElementRef) {\r\n  }\r\n\r\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\r\n    if (!this.elemRef.nativeElement.contains(event.target)) {\r\n      this.columnSelectorOpen = false;\r\n    }\r\n  }\r\n\r\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\r\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\r\n      this.columnSelectorOpen = false;\r\n    }\r\n  }\r\n\r\n  onChange(event: Event) {\r\n    const isChecked = (<HTMLInputElement> event.target).checked;\r\n    const columnName = (<HTMLInputElement> event.target).parentElement.textContent.trim();\r\n    const interpolateParams = {\r\n      'column_name': columnName,\r\n      'title': this.dataTable.title\r\n    };\r\n\r\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\r\n      this.dataTable.labels.headerColumnSelectorRemoved)\r\n      .replace('{column_name}', interpolateParams.column_name)\r\n      .replace('{title}', interpolateParams.title);\r\n  }\r\n}\r\n",
    "import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { DataTableColumnDirective } from '../../directives/column/column.directive';\r\nimport { DataTableRowComponent } from '../row/row.component';\r\nimport { DataTableParams } from '../../types/data-table-params.type';\r\nimport { RowCallback } from '../../types/row-callback.type';\r\nimport { DataTableTranslations } from '../../types/data-table-translations.type';\r\nimport { defaultTranslations } from '../../types/default-translations.type';\r\nimport { drag } from '../../utils/drag';\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/do';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'data-table',\r\n  template: `<div class=\"data-table-wrapper\">\r\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\r\n    <span [textContent]=\"reloadNotification\"></span>\r\n    <span [textContent]=\"paginationNotification\"></span>\r\n    <span [textContent]=\"sortNotification\"></span>\r\n    <span [textContent]=\"columnSelectorNotification\"></span>\r\n  </span>\r\n\r\n  <data-table-header *ngIf=\"header\"></data-table-header>\r\n\r\n  <div class=\"data-table-box\">\r\n    <table class=\"table data-table\" [id]=\"id\">\r\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\r\n      <thead>\r\n      <tr>\r\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\r\n        </td>\r\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\r\n          <span [textContent]=\"indexColumnHeader\"></span>\r\n        </th>\r\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\r\n          <input [hide]=\"!multiSelect\"\r\n                 type=\"checkbox\"\r\n                 [(ngModel)]=\"selectAllCheckbox\"\r\n                 [disabled]=\"itemCount === 0\"\r\n                 [title]=\"labels.selectAllRows\"\r\n                 [attr.aria-label]=\"labels.selectAllRows\"/>\r\n        </td>\r\n        <th *ngFor=\"let column of columns, index as i\" #th\r\n            [hide]=\"!column.visible\"\r\n            [class.sortable]=\"column.sortable\"\r\n            [class.resizable]=\"column.resizable\"\r\n            scope=\"col\"\r\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\r\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\r\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\r\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\r\n                  [disabled]=\"itemCount === 0\"\r\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\r\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\r\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\r\n                  [textContent]=\"column.header\"></span>\r\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\r\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\r\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\r\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\r\n                aria-hidden=\"true\"></i>\r\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\r\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\r\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\r\n          </button>\r\n          <span *ngIf=\"!column.sortable\">\r\n            <span *ngIf=\"!column.headerTemplate\"\r\n                  [textContent]=\"column.header\"></span>\r\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\r\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\r\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\r\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\r\n                  aria-hidden=\"true\"></i>\r\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\r\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\r\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\r\n          </span>\r\n        </th>\r\n      </tr>\r\n      </thead>\r\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\r\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\r\n      </tbody>\r\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\r\n        <tr>\r\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\r\n        </tr>\r\n      </tbody>\r\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\r\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\r\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\r\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\r\n        <td [hide]=\"!expandColumnVisible\"></td>\r\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\r\n        <td [hide]=\"!selectColumnVisible\"></td>\r\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\r\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\r\n    </div>\r\n  </div>\r\n\r\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\r\n</div>\r\n`,\r\n  styles: [`:host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header .column-sort-icon{margin-left:8px}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.busy{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy>i{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}`]\r\n})\r\nexport class DataTableComponent implements DataTableParams, OnInit, AfterContentInit, OnDestroy {\r\n\r\n  private _items: any[] = [];\r\n  private _itemCount;\r\n\r\n  @Input()\r\n  get items(): any[] {\r\n    return this._items;\r\n  }\r\n\r\n  set items(items: any[]) {\r\n    this._items = items;\r\n    // no need to call notifier.next() because _onReloadFinished()\r\n    // will change reloaded value causing notifier.next() to be called implicitly.\r\n    this._onReloadFinished();\r\n  }\r\n\r\n\r\n  @Input()\r\n  get itemCount(): number {\r\n    return this._itemCount;\r\n  }\r\n\r\n  set itemCount(count: number) {\r\n    this._itemCount = count;\r\n    this.notifier.next();\r\n  }\r\n\r\n  // UI components:\r\n  @ContentChildren(DataTableColumnDirective) columns: QueryList<DataTableColumnDirective>;\r\n  @ViewChildren(DataTableRowComponent) rows: QueryList<DataTableRowComponent>;\r\n  @ContentChild('dataTableExpand') expandTemplate: TemplateRef<any>;\r\n\r\n  // One-time optional bindings with default values:\r\n  @Input() title = '';\r\n  @Input() showTitle = true;\r\n  @Input() header = true;\r\n  @Input() pagination = true;\r\n  @Input() indexColumn = true;\r\n  @Input() indexColumnHeader = '';\r\n  @Input() rowColors: RowCallback;\r\n  @Input() rowTooltip: RowCallback;\r\n  @Input() selectColumn = false;\r\n  @Input() multiSelect = true;\r\n  @Input() substituteRows = true;\r\n  @Input() expandableRows = false;\r\n  @Input() labels: DataTableTranslations;\r\n  @Input() selectOnRowClick = false;\r\n  @Input() autoReload = true;\r\n  @Input() showReloading = false;\r\n  @Input() noDataMessage: string;\r\n  @Input() pageLimits: number[] = [10, 25, 50, 100, 250];\r\n  @Input() primaryColumn = '';\r\n\r\n  // reload emitter\r\n  @Output() reload = new EventEmitter();\r\n\r\n  // event handlers:\r\n  @Output() rowClick = new EventEmitter();\r\n  @Output() rowDoubleClick = new EventEmitter();\r\n  @Output() headerClick = new EventEmitter();\r\n  @Output() cellClick = new EventEmitter();\r\n  // UI state without input:\r\n  indexColumnVisible: boolean;\r\n  selectColumnVisible: boolean;\r\n  expandColumnVisible: boolean;\r\n\r\n  // ada notifications.\r\n  reloadNotification: string;\r\n  paginationNotification: string;\r\n  sortNotification: string;\r\n  columnSelectorNotification: string;\r\n\r\n  _displayParams = <DataTableParams>{}; // params of the last finished reload\r\n\r\n  subject = new Subject<void>();\r\n  subject$: Subscription;\r\n\r\n  notifier = new Subject<void>();\r\n  notifier$: Subscription;\r\n\r\n  // selection:\r\n  selectedRow: DataTableRowComponent;\r\n  selectedRows: DataTableRowComponent[] = [];\r\n\r\n  Math: any;\r\n  id = `datatable-${nextId++}`;\r\n\r\n  // select all checkbox flag\r\n  private _selectAllCheckbox = false;\r\n\r\n  // column resizing:\r\n  private _resizeInProgress = false;\r\n\r\n  resizeLimit = 30;\r\n\r\n  // Reloading:\r\n  _reloading = false;\r\n\r\n  get reloading() {\r\n    return this._reloading;\r\n  }\r\n\r\n  set reloading(val: boolean) {\r\n    this._reloading = val;\r\n    this.notifier.next();\r\n  }\r\n\r\n  // UI state: visible get/set for the outside with @Input for one-time initial values\r\n  private _sortBy: string;\r\n\r\n  @Input()\r\n  get sortBy(): string {\r\n    return this._sortBy;\r\n  }\r\n\r\n  set sortBy(value: string) {\r\n    this._sortBy = value;\r\n    this.subject.next();\r\n  }\r\n\r\n  private _sortAsc = true;\r\n\r\n  @Input()\r\n  get sortAsc(): boolean {\r\n    return this._sortAsc;\r\n  }\r\n\r\n  set sortAsc(value: boolean) {\r\n    this._sortAsc = value;\r\n    this.subject.next();\r\n  }\r\n\r\n  private _offset = 0;\r\n\r\n  @Input()\r\n  get offset(): number {\r\n    return this._offset;\r\n  }\r\n\r\n  set offset(value: number) {\r\n    this._offset = value;\r\n    this.subject.next();\r\n  }\r\n\r\n  private _limit = 10;\r\n\r\n  @Input()\r\n  get limit(): number {\r\n    return this._limit;\r\n  }\r\n\r\n  set limit(value: number) {\r\n    this._limit = value;\r\n    this.subject.next();\r\n  }\r\n\r\n  // calculated property:\r\n  @Input()\r\n  get page() {\r\n    return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\r\n  }\r\n\r\n  set page(value) {\r\n    this.offset = (value - 1) * this.limit;\r\n  }\r\n\r\n  get lastPage() {\r\n    return Math.ceil(this.itemCount / this.limit);\r\n  }\r\n\r\n  // setting multiple observable properties simultaneously\r\n  sort(sortBy: string, asc: boolean) {\r\n    this.sortBy = sortBy;\r\n    this.sortAsc = asc;\r\n  }\r\n\r\n  // init\r\n  ngOnInit() {\r\n    this._initDefaultValues();\r\n    this._initDefaultClickEvents();\r\n    this._updateDisplayParams();\r\n\r\n    if (this.pageLimits.indexOf(this.limit) < 0) {\r\n      this.limit = this.pageLimits[0];\r\n    }\r\n\r\n    this.labels = {...defaultTranslations, ...this.labels};\r\n\r\n    if (this.autoReload) {\r\n      this.reloadItems();\r\n    }\r\n\r\n    this.notifier$ = this.notifier.subscribe(() => this._notify());\r\n    this.subject$ = this.subject.debounceTime(100).subscribe(() => this.reloadItems());\r\n\r\n  }\r\n\r\n  private _initDefaultValues() {\r\n    this.indexColumnVisible = this.indexColumn;\r\n    this.selectColumnVisible = this.selectColumn;\r\n    this.expandColumnVisible = this.expandableRows;\r\n  }\r\n\r\n  private _initDefaultClickEvents() {\r\n    this.headerClick.subscribe(\r\n      (tableEvent: { column: DataTableColumnDirective, event: Event }) => this.sortColumn(tableEvent.column));\r\n    if (this.selectOnRowClick) {\r\n      this.rowClick.subscribe(\r\n        (tableEvent: { row: DataTableRowComponent, event: Event }) => tableEvent.row.selected = !tableEvent.row.selected);\r\n    }\r\n  }\r\n\r\n  reloadItems() {\r\n    this.reloading = true;\r\n    this.reload.emit(this._getRemoteParameters());\r\n  }\r\n\r\n  private _onReloadFinished() {\r\n    if (this.reloading) {\r\n      this._updateDisplayParams();\r\n      this._selectAllCheckbox = false;\r\n      this.reloading = false;\r\n    }\r\n  }\r\n  get displayParams() {\r\n    return this._displayParams;\r\n  }\r\n\r\n  _updateDisplayParams() {\r\n    this._displayParams = {\r\n      sortBy: this.sortBy,\r\n      sortAsc: this.sortAsc,\r\n      offset: this.offset,\r\n      limit: this.limit\r\n    };\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  public rowClicked(row: DataTableRowComponent, event: Event) {\r\n    this.rowClick.emit({row, event});\r\n  }\r\n\r\n  public rowDoubleClicked(row: DataTableRowComponent, event: Event) {\r\n    this.rowDoubleClick.emit({row, event});\r\n  }\r\n\r\n  public headerClicked(column: DataTableColumnDirective, event: Event) {\r\n    if (!this._resizeInProgress) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.headerClick.emit({column, event});\r\n    } else {\r\n      this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\r\n    }\r\n  }\r\n\r\n  private cellClicked(column: DataTableColumnDirective, row: DataTableRowComponent, event: MouseEvent) {\r\n    this.cellClick.emit({row, column, event});\r\n  }\r\n\r\n  // functions:\r\n  private _getRemoteParameters(): DataTableParams {\r\n    const params = <DataTableParams>{};\r\n\r\n    if (this.sortBy) {\r\n      params.sortBy = this.sortBy;\r\n      params.sortAsc = this.sortAsc;\r\n    }\r\n    if (this.pagination) {\r\n      params.offset = this.offset;\r\n      params.limit = this.limit;\r\n    }\r\n    return params;\r\n  }\r\n\r\n  private sortColumn(column: DataTableColumnDirective) {\r\n    if (column.sortable) {\r\n      const ascending = this.sortBy === column.property ? !this.sortAsc : true;\r\n      this.sort(column.property, ascending);\r\n    }\r\n  }\r\n\r\n  get columnCount() {\r\n    let count = 0;\r\n    count += this.indexColumnVisible ? 1 : 0;\r\n    count += this.selectColumnVisible ? 1 : 0;\r\n    count += this.expandColumnVisible ? 1 : 0;\r\n    this.columns.toArray().forEach(column => {\r\n      count += column.visible ? 1 : 0;\r\n    });\r\n    return count;\r\n  }\r\n\r\n  public getRowColor(item: any, index: number, row: DataTableRowComponent) {\r\n    if (this.rowColors !== undefined) {\r\n      return (<RowCallback>this.rowColors)(item, row, index);\r\n    }\r\n  }\r\n\r\n  get selectAllCheckbox() {\r\n    return this._selectAllCheckbox;\r\n  }\r\n\r\n  set selectAllCheckbox(value) {\r\n    this._selectAllCheckbox = value;\r\n    this._onSelectAllChanged(value);\r\n  }\r\n\r\n  private _onSelectAllChanged(value: boolean) {\r\n    this.rows.toArray().forEach(row => row.selected = value);\r\n  }\r\n\r\n  onRowSelectChanged(row: DataTableRowComponent) {\r\n\r\n    // maintain the selectedRow(s) view\r\n    if (this.multiSelect) {\r\n      const index = this.selectedRows.indexOf(row);\r\n      if (row.selected && index < 0) {\r\n        this.selectedRows.push(row);\r\n      } else if (!row.selected && index >= 0) {\r\n        this.selectedRows.splice(index, 1);\r\n      }\r\n    } else {\r\n      if (row.selected) {\r\n        this.selectedRow = row;\r\n      } else if (this.selectedRow === row) {\r\n        delete this.selectedRow;\r\n      }\r\n    }\r\n\r\n    // unselect all other rows:\r\n    if (row.selected && !this.multiSelect) {\r\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\r\n        if (row_ !== row) { // avoid endless loop\r\n          row_.selected = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // other:\r\n\r\n  get substituteItems() {\r\n    return Array.from({length: this.displayParams.limit - this.items.length});\r\n  }\r\n\r\n  private resizeColumnStart(event: MouseEvent, column: DataTableColumnDirective, columnElement: HTMLElement) {\r\n    this._resizeInProgress = true;\r\n    let startOffset = columnElement.offsetWidth - event.pageX;\r\n    drag(event, {\r\n      move: (moveEvent: MouseEvent, dx: number) => {\r\n        if (this._isResizeInLimit(columnElement, dx)) {\r\n          column.width = startOffset + moveEvent.pageX + dx;\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\r\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\r\n         Without the limits, resizing can make the next column disappear completely,\r\n         and even increase the table width. The current implementation suffers from the fact,\r\n         that offsetWidth sometimes contains out-of-date values. */\r\n    if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\r\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\r\n      (dx >= 0 && ((<HTMLElement> columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.primaryColumn === '') {\r\n      this.primaryColumn = (this.columns.first as DataTableColumnDirective).property;\r\n    }\r\n  }\r\n\r\n  _notify(): void {\r\n    const loading = this.reloading;\r\n\r\n    this.reloadNotification = loading ?\r\n      this.labels.loadingText.replace('{title}', this.title) :\r\n      this.labels.loadedText.replace('{title}', this.title);\r\n\r\n    if (!loading) {\r\n      if (this.pagination) {\r\n        this.paginationNotification = this.labels.paginationText\r\n          .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\r\n          .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\r\n          .replace('{total}', '' + this.itemCount);\r\n      } else {\r\n        this.paginationNotification = '';\r\n      }\r\n      if (this.columns !== undefined && this.sortBy !== undefined) {\r\n        const col = this.columns.toArray().find(column => column.property === this.sortBy) as DataTableColumnDirective;\r\n        this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\r\n          .replace('{title}', this.title)\r\n          .replace('{header}', col.header);\r\n      } else {\r\n        this.sortNotification = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subject$.unsubscribe();\r\n    this.notifier$.unsubscribe();\r\n  }\r\n}\r\n",
    "export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\r\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\r\n\r\n/*tslint:disable-next-line*/\r\nexport function drag(event: MouseEvent, {move: move, up: up}: { move: MoveHandler, up?: UpHandler }) {\r\n\r\n  const startX = event.pageX;\r\n  const startY = event.pageY;\r\n  let x = startX;\r\n  let y = startY;\r\n  let moved = false;\r\n\r\n  function mouseMoveHandler(evt: MouseEvent) {\r\n    const dx = evt.pageX - x;\r\n    const dy = evt.pageY - y;\r\n    x = evt.pageX;\r\n    y = evt.pageY;\r\n    if (dx || dy) {\r\n      moved = true;\r\n    }\r\n\r\n    move(evt, dx, dy, x, y);\r\n\r\n    event.preventDefault(); // to avoid text selection\r\n  }\r\n\r\n  function mouseUpHandler(evt: MouseEvent) {\r\n    x = evt.pageX;\r\n    y = evt.pageY;\r\n\r\n    document.removeEventListener('mousemove', mouseMoveHandler);\r\n    document.removeEventListener('mouseup', mouseUpHandler);\r\n\r\n    if (up) {\r\n      up(event, x, y, moved);\r\n    }\r\n  }\r\n\r\n  document.addEventListener('mousemove', mouseMoveHandler);\r\n  document.addEventListener('mouseup', mouseUpHandler);\r\n}\r\n",
    "import { DataTableTranslations } from './data-table-translations.type';\r\n\r\nexport const defaultTranslations: DataTableTranslations = {\r\n  headerReload: 'reload {title} table',\r\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\r\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\r\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\r\n  indexColumn: 'index',\r\n  selectColumn: 'select',\r\n  selectRow: 'select {cell_content}',\r\n  selectAllRows: 'select all rows',\r\n  expandColumn: 'expand',\r\n  expandRow: 'expand {cell_content}',\r\n  sortedAscending: '{title} table sorted by {header} ascending',\r\n  sortedDescending: '{title} table sorted by {header} descending',\r\n  sortAscending: 'activate to sort ascending',\r\n  sortDescending: 'activate to sort descending',\r\n  paginationLimit: 'Limit',\r\n  paginationText: 'Results: {from} to {to} of {total}',\r\n  paginationTotalPages: 'of',\r\n  firstPage: 'first page',\r\n  prevPage: 'previous page',\r\n  pageNumberLabel: 'Page',\r\n  pageNumber: 'page number',\r\n  pageNumberNofM: '({N} of {M})',\r\n  nextPage: 'next page',\r\n  lastPage: 'last page',\r\n  loadingText: '{title} table is loading',\r\n  loadedText: '{title} table loaded'\r\n};\r\n",
    "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { DataTableComponent } from '../table/table.component';\r\n\r\n@Component({\r\n  selector: '[dataTableRow]',\r\n  template: `<tr class=\"data-table-row\"\r\n    [title]=\"getTooltip()\"\r\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\r\n    [class.row-odd]=\"index % 2 === 0\"\r\n    [class.row-even]=\"index % 2 === 1\"\r\n    [class.selected]=\"selected\"\r\n    [class.clickable]=\"dataTable.selectOnRowClick\">\r\n  <td [hide]=\"!dataTable.expandColumnVisible\">\r\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\r\n         [attr.aria-expanded]=\"expanded\"\r\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\r\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\r\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\r\n    </button>\r\n  </td>\r\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\r\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\r\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"\r\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\r\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\r\n  </td>\r\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\r\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\r\n        class=\"data-column\"\r\n        [style.background-color]=\"column.getCellColor(_this, index)\">\r\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\r\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\r\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\r\n    </th>\r\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\r\n        class=\"data-column\"\r\n        [style.background-color]=\"column.getCellColor(_this, index)\">\r\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\r\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\r\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\r\n    </td>\r\n  </ng-template>\r\n</tr>\r\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\r\n  <td [attr.colspan]=\"dataTable.columnCount\">\r\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\r\n  </td>\r\n</tr>\r\n`,\r\n  styles: [`.select-column{text-align:center}.row-expand-button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable{cursor:pointer}th{font-weight:initial}`]\r\n})\r\nexport class DataTableRowComponent implements OnInit, OnDestroy {\r\n\r\n  public _this = this;\r\n\r\n  @Input() item: any;\r\n  @Input() index: number;\r\n\r\n  expanded: boolean;\r\n\r\n  private _listeners = [];\r\n\r\n  // row selection:\r\n  private _selected: boolean;\r\n\r\n  @Output() selectedChange = new EventEmitter();\r\n\r\n  get selected() {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(selected) {\r\n    this._selected = selected;\r\n    this.selectedChange.emit(selected);\r\n  }\r\n\r\n  // other:\r\n  get displayIndex() {\r\n    if (this.dataTable.pagination) {\r\n      return this.dataTable.displayParams.offset + this.index + 1;\r\n    } else {\r\n      return this.index + 1;\r\n    }\r\n  }\r\n\r\n  getTooltip() {\r\n    if (this.dataTable.rowTooltip) {\r\n      return this.dataTable.rowTooltip(this.item, this, this.index);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\r\n              private renderer: Renderer2, private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    if (this.dataTable.rowClick.observers.length > 0) {\r\n      this._listeners.push(\r\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\r\n          (event) => this.dataTable.rowClicked(this, event))\r\n      );\r\n    }\r\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\r\n      this._listeners.push(\r\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\r\n          (event) => this.dataTable.rowDoubleClicked(this, event))\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.selected = false;\r\n    this._listeners.forEach(fn => fn());\r\n  }\r\n}\r\n",
    "import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\r\nimport {DataTableRowComponent} from '../../components/row/row.component';\r\nimport {CellCallback} from '../../types/cell-callback.type';\r\n\r\n\r\n@Directive({\r\n  selector: 'data-table-column'\r\n})\r\nexport class DataTableColumnDirective implements OnInit {\r\n\r\n  private styleClassObject = {}; // for [ngClass]\r\n\r\n  // init:\r\n  @Input() header: string;\r\n  @Input() sortable = false;\r\n  @Input() resizable = false;\r\n  @Input() property: string;\r\n  @Input() styleClass: string;\r\n  @Input() cellColors: CellCallback;\r\n\r\n  // init and state:\r\n  @Input() width: number | string;\r\n  @Input() visible = true;\r\n\r\n  @ContentChild('dataTableCell') cellTemplate: ElementRef;\r\n  @ContentChild('dataTableHeader') headerTemplate: ElementRef;\r\n\r\n  getCellColor(row: DataTableRowComponent, index: number) {\r\n    if (this.cellColors !== undefined) {\r\n      return (<CellCallback>this.cellColors)(row.item, row, this, index);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._initCellClass();\r\n  }\r\n\r\n  private _initCellClass() {\r\n    if (!this.styleClass && this.property) {\r\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\r\n        this.styleClass = 'column-' + this.property;\r\n      } else {\r\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\r\n      }\r\n    }\r\n\r\n    if (this.styleClass != null) {\r\n      this.styleClassObject = {\r\n        [this.styleClass]: true\r\n      };\r\n    }\r\n  }\r\n}\r\n",
    "import {DataTableParams} from '../types/data-table-params.type';\r\n\r\n\r\nexport class DataTableResource<T> {\r\n\r\n  constructor(private items: T[]) {\r\n  }\r\n\r\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\r\n\r\n    let result: T[] = [];\r\n    if (filter) {\r\n      result = this.items.filter(filter);\r\n    } else {\r\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\r\n    }\r\n\r\n    if (params.sortBy) {\r\n      result.sort((a: DataTableParams, b: DataTableParams) => {\r\n        if (typeof a[params.sortBy] === 'string') {\r\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\r\n        } else {\r\n          return a[params.sortBy] - b[params.sortBy];\r\n        }\r\n      });\r\n      if (params.sortAsc === false) {\r\n        result.reverse();\r\n      }\r\n    }\r\n    if (params.offset !== undefined) {\r\n      if (params.limit === undefined) {\r\n        result = result.slice(params.offset, result.length);\r\n      } else {\r\n        result = result.slice(params.offset, params.offset + params.limit);\r\n      }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => resolve(result));\r\n    });\r\n  }\r\n\r\n  count(): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => resolve(this.items.length));\r\n    });\r\n\r\n  }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'px'\r\n})\r\nexport class PixelConverter implements PipeTransform {\r\n  transform(value: string | number, args: string[]): any {\r\n    if (value === undefined) {\r\n      return;\r\n    }\r\n    if (typeof value === 'string') {\r\n      return value;\r\n    }\r\n    if (typeof value === 'number') {\r\n      return value + 'px';\r\n    }\r\n  }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({\r\n  name: 'min'\r\n})\r\nexport class MinPipe implements PipeTransform {\r\n  transform(value: number[], args: string[]): any {\r\n    return Math.min.apply(null, value);\r\n  }\r\n}\r\n",
    "import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nfunction isBlank(obj: any): boolean {\r\n  return obj === undefined || obj === null;\r\n}\r\n\r\n@Directive({\r\n  selector: '[hide]'\r\n})\r\nexport class HideDirective {\r\n\r\n  private _prevCondition = false;\r\n  private _displayStyle: string;\r\n\r\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\r\n  }\r\n\r\n  @Input()\r\n  set hide(newCondition: boolean) {\r\n    this.initDisplayStyle();\r\n\r\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\r\n      this._prevCondition = true;\r\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\r\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\r\n      this._prevCondition = false;\r\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\r\n    }\r\n  }\r\n\r\n  private initDisplayStyle() {\r\n    if (this._displayStyle === undefined) {\r\n      const displayStyle = this._elementRef.nativeElement.style.display;\r\n      if (displayStyle !== 'none') {\r\n        this._displayStyle = displayStyle;\r\n      }\r\n    }\r\n  }\r\n}\r\n"
  ],
  "names": [
    "nextId"
  ],
  "mappings": "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"
}
